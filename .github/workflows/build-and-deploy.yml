on:
  push:
    branches:
      - main

env:
  REGISTRY: 420493635762.dkr.ecr.us-east-1.amazonaws.com/final-workshop
  ECS_CLUSTER_NAME: FinalWorkShopECS
  ECS_SERVICE_NAME: StatusPageContainer
  CF_DISTRIBUTION_ID: E3MGXQC933ZEY6

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Docker Image
        run: |
          docker build -t my_image .
          docker tag my_image:latest ${REGISTRY}:latest
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${REGISTRY}
      - name: Push Docker Image to ECR
        run: |
          docker push ${REGISTRY}:latest
      - name: Create CloudFront Invalidation
        run: |
          aws cloudfront create-invalidation --distribution-id ${CF_DISTRIBUTION_ID} --paths "/*" > invalidation.json
      - name: Wait for Invalidation to Complete
        run: |
          invalidation_id=$(aws cloudfront create-invalidation --distribution-id ${CF_DISTRIBUTION_ID} --paths "/*" | grep -oP '(?<="Id": ")[^"]+')
          aws cloudfront wait invalidation-completed --distribution-id ${CF_DISTRIBUTION_ID} --id ${invalidation_id}
      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ${ECS_CLUSTER_NAME} --service ${ECS_SERVICE_NAME} --force-new-deployment
